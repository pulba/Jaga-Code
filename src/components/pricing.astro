---
// Component Script
interface Props {
    title: string;
    titleClass?: string;
    priceClass?: string;
    titleButton: string;
    body: string;
    iconPath?: string;
    primaryClass?: string;
    buttonClass?: string;
    iconSize?: string;
    price: string;
    href?: string;
    listItems: string[];
}

const {
    title,
    titleClass = "",
    priceClass = "",
    titleButton,
    body,
    iconPath = "",
    primaryClass = "",
    buttonClass = "bg-blue-900 text-white rounded-lg",
    iconSize = "w-12 h-12",
    price,
    href = "#",
    listItems,
} = Astro.props;
---

<div class={`flex flex-col justify-between h-max py-6 ${primaryClass}`}>
    <div class={`${titleClass} rounded-t-lg`}>
        <h2 class={`text-xl font-bold`}>{title}</h2>
        <h2 class="font-bold text-3xl mt-5"> <sup class="text-lg">Rp</sup>{price}</h2>
        <p>{body}</p>
        <a href={href}>
            <button class={`${buttonClass} text-center w-full mx-auto mt-6 px-6 py-2`}
                >{titleButton}</button
            >
        </a>
    </div>
    <hr class="h-px bg-gray-400 border-0 mx-6">
    <div class={`font-geist ${priceClass} my-2 text-white`}>
        {
            listItems.map((item, index) => (
                <p class="mt-2 mb-0 flex gap-2">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke-width="2"
                        stroke="currentColor"
                        class={`${iconSize} mb-2 ${!iconPath ? "hidden" : ""}`}
                    >
                        <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            d={iconPath}
                        />
                    </svg>
                    {item}
                </p>
            ))
        }
    </div>
</div>
